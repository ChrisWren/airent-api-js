<%
function getActionPackage() {
  return `${utils.toKababCase(entity.name)}-actions${utils.getModuleSuffix(config)}`;
}
-%>
<% if (utils.isPresentableEntity(entity) && entity.api.booleans.hasAny) { -%>
import {
  <%_ if (entity.api.booleans.hasGetMany) { -%>
  handleGetMany,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOne) { -%>
  handleGetOne,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOneSafe) { -%>
  handleGetOneSafe,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasCreateOne) { -%>
  handleCreateOne,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasUpdateOne) { -%>
  handleUpdateOne,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasDeleteOne) { -%>
  handleDeleteOne,
  <%_ } -%>
} from '<%- config.api.baseLibPackage %>';
import <%= entity.api.strings.actionsClass %> from './<%= getActionPackage() %>';
import {
  <%_ if (entity.api.booleans.hasGetMany) { -%>
  <%= entity.api.strings.getManyQuery %>,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOneRequest) { -%>
  <%= entity.api.strings.getOneParams %>,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasCreateOne) { -%>
  <%= entity.api.strings.createOneBody %>,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasUpdateOne) { -%>
  <%= entity.api.strings.updateOneBody %>,
  <%_ } -%>
} from '<%- entity.api.packages.baseRequest %>';
import { handlerConfig } from '<%- config.api.server.handlerConfigPackage %>';
  <%_ if (entity.api.booleans.hasGetMany) { -%>

    <%_ if (entity.deprecated) { -%>
/** @deprecated */
    <%_ } -%>
const getMany = handleGetMany({
  ...handlerConfig,
  queryZod: <%= entity.api.strings.getManyQuery %>,
  action: <%= entity.api.strings.actionsClass %>.getMany,
  options: <%= entity.api.methods.getMany ?? '{}' %>,
});
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOne) { -%>

    <%_ if (entity.deprecated) { -%>
/** @deprecated */
    <%_ } -%>
const getOne = handleGetOne({
  ...handlerConfig,
  paramsZod: <%= entity.api.strings.getOneParams %>,
  action: <%= entity.api.strings.actionsClass %>.getOne,
  options: <%= entity.api.methods.getOne ?? '{}' %>,
});
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOneSafe) { -%>

    <%_ if (entity.deprecated) { -%>
/** @deprecated */
    <%_ } -%>
const getOneSafe = handleGetOneSafe({
  ...handlerConfig,
  paramsZod: <%= entity.api.strings.getOneParams %>,
  action: <%= entity.api.strings.actionsClass %>.getOneSafe,
  options: <%= entity.api.methods.getOneSafe ?? '{}' %>,
});
  <%_ } -%>
  <%_ if (entity.api.booleans.hasCreateOne) { -%>

    <%_ if (entity.deprecated) { -%>
/** @deprecated */
    <%_ } -%>
const createOne = handleCreateOne({
  ...handlerConfig,
  bodyZod: <%= entity.api.strings.createOneBody %>,
  action: <%= entity.api.strings.actionsClass %>.createOne,
  options: <%= entity.api.methods.createOne ?? '{}' %>,
});
  <%_ } -%>
  <%_ if (entity.api.booleans.hasUpdateOne) { -%>

    <%_ if (entity.deprecated) { -%>
/** @deprecated */
    <%_ } -%>
const updateOne = handleUpdateOne({
  ...handlerConfig,
  paramsZod: <%= entity.api.strings.getOneParams %>,
  bodyZod: <%= entity.api.strings.updateOneBody %>,
  action: <%= entity.api.strings.actionsClass %>.updateOne,
  options: <%= entity.api.methods.updateOne ?? '{}' %>,
});
  <%_ } -%>
  <%_ if (entity.api.booleans.hasDeleteOne) { -%>

    <%_ if (entity.deprecated) { -%>
/** @deprecated */
    <%_ } -%>
const deleteOne = handleDeleteOne({
  ...handlerConfig,
  paramsZod: <%= entity.api.strings.getOneParams %>,
  action: <%= entity.api.strings.actionsClass %>.deleteOne,
  options: <%= entity.api.methods.deleteOne ?? '{}' %>,
});
  <%_ } -%>

  <%_ if (entity.deprecated) { -%>
/** @deprecated */
  <%_ } -%>
const <%= entity.api.strings.handlersClass %> = {
  <%_ if (entity.api.booleans.hasGetMany) { -%>
  getMany,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOne) { -%>
  getOne,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOneSafe) { -%>
  getOneSafe,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasCreateOne) { -%>
  createOne,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasUpdateOne) { -%>
  updateOne,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasDeleteOne) { -%>
  deleteOne,
  <%_ } -%>
};

export default <%= entity.api.strings.handlersClass %>;
<% } -%>
