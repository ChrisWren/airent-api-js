<% if (utils.isPresentableEntity(entity) && entity.api.booleans.hasAny) { -%>
// airent imports
import { Awaitable } from '<%- config.api.baseLibPackage %>';

// config imports
import { Context } from '<%- config.baseContextPackage %>';

// entity imports
import { <%= entity.strings.entityClass %> } from '../<%= entity.strings.entityPackage %>';
  <%_ entity.types.filter(utils.isImportType).forEach((type) => { -%>
import { <%= type.strings.externalClass %> } from '<%- type.strings.baseExternalPackage %>';
  <%_ }); -%>
import {
  <%_ entity.types.filter(utils.isCustomType).forEach((type) => { -%>
  <%= type.name %>,
  <%_ }); -%>
} from './<%= entity.strings.typePackage %>';
import {
  <%_ if (entity.api.booleans.hasGetMany) { -%>
  <%= entity.api.strings.getManyQuery %>,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOneRequest) { -%>
  <%= entity.api.strings.getOneParams %>,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasCreateOne) { -%>
  <%= entity.api.strings.createOneBody %>,
  <%_ } -%>
  <%_ if (entity.api.booleans.hasUpdateOne) { -%>
  <%= entity.api.strings.updateOneBody %>,
  <%_ } -%>
} from '<%- entity.api.packages.baseRequest %>';

  <%_ if (entity.deprecated) { -%>
/** @deprecated */
  <%_ } -%>
export interface <%= entity.api.strings.serviceInterfaceClass %> {
  <%_ if (entity.api.booleans.hasGetMany) { -%>
  beforeGetMany?: (query: <%= entity.api.strings.getManyQuery %>, context: Context) => Awaitable<void>;
  afterGetMany?: (many: <%= entity.strings.entityClass %>[], query: <%= entity.api.strings.getManyQuery %>, context: Context) => Awaitable<void>;
  getMany: (query: <%= entity.api.strings.getManyQuery %>, context: Context) => Awaitable<<%= entity.strings.entityClass %>[]>;
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOne) { -%>
  beforeGetOne?: (params: <%= entity.api.strings.getOneParams %>, context: Context) => Awaitable<void>;
  afterGetOne?: (one: <%= entity.strings.entityClass %>, params: <%= entity.api.strings.getOneParams %>, context: Context) => Awaitable<void>;
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOne || entity.api.booleans.hasUpdateOne || entity.api.booleans.hasDeleteOne) { -%>
  getOne: (params: <%= entity.api.strings.getOneParams %>, context: Context) => Awaitable<<%= entity.strings.entityClass %>>;
  <%_ } -%>
  <%_ if (entity.api.booleans.hasGetOneSafe) { -%>
  beforeGetOneSafe?: (params: <%= entity.api.strings.getOneParams %>, context: Context) => Awaitable<void>;
  afterGetOneSafe?: (one: <%= entity.strings.entityClass %> | null, params: <%= entity.api.strings.getOneParams %>, context: Context) => Awaitable<void>;
  getOneSafe: (params: <%= entity.api.strings.getOneParams %>, context: Context) => Awaitable<<%= entity.strings.entityClass %> | null>;
  <%_ } -%>
  <%_ if (entity.api.booleans.hasCreateOne) { -%>
  beforeCreateOne?: (body: <%= entity.api.strings.createOneBody %>, context: Context) => Awaitable<void>;
  afterCreateOne?: (createdOne: <%= entity.strings.entityClass %>, body: <%= entity.api.strings.createOneBody %>, context: Context) => Awaitable<void>;
  createOne: (body: <%= entity.api.strings.createOneBody %>, context: Context) => Awaitable<<%= entity.strings.entityClass %>>;
  <%_ } -%>
  <%_ if (entity.api.booleans.hasUpdateOne) { -%>
  beforeUpdateOne?: (one: <%= entity.strings.entityClass %>, body: <%= entity.api.strings.updateOneBody %>, context: Context) => Awaitable<void>;
  afterUpdateOne?: (updatedOne: <%= entity.strings.entityClass %>, body: <%= entity.api.strings.updateOneBody %>, context: Context) => Awaitable<void>;
  updateOne: (one: <%= entity.strings.entityClass %>, body: <%= entity.api.strings.updateOneBody %>, context: Context) => Awaitable<<%= entity.strings.entityClass %>>;
  <%_ } -%>
  <%_ if (entity.api.booleans.hasDeleteOne) { -%>
  beforeDeleteOne?: (one: <%= entity.strings.entityClass %>, context: Context) => Awaitable<void>;
  afterDeleteOne?: (deletedOne: <%= entity.strings.entityClass %>, context: Context) => Awaitable<void>;
  deleteOne: (one: <%= entity.strings.entityClass %>, context: Context) => Awaitable<<%= entity.strings.entityClass %>>;
  <%_ } -%>
}
<% } -%>
